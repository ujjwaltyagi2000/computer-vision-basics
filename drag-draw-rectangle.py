#In this code we will make a rectangle via dragging the mouse over a black image

#In this program, we'll have to detect two events:
    #LMB press
    #Mouse movement
#Also we need two sets of coordinates: top left corner and bottom right corner

#To implement this program, we want a set of coordinates ix and iy, which would make the first pair of coordinates and will be fixed.
#We also want value of x and y which is generated by mouse call back which will be changing as the mouse moves, where the mouse stops will be the final value of x and y


import numpy as np
import cv2

# VARIABLES
drawing=False #will be true while mouse button is down

ix,iy=-1,-1

#FUNCTION
def draw_rectangle(event, x, y, flags, params):
    
    global ix, iy, drawing #we can change the value of these variables in the global namespace

    if event == cv2.EVENT_LBUTTONDOWN:
    #We're starting to draw the rectangle
        drawing=True
        ix,iy=x,y

    elif event == cv2.EVENT_MOUSEMOVE:
        
        if drawing == True:
            
            cv2.rectangle(img,(ix,iy),(x,y),(0,255,0),-1)

        elif event == cv2.EVENT_RBUTTONDOWN:

            drawing==False

    elif event == cv2.EVENT_LBUTTONUP:

        drawing=False
        cv2.rectangle(img,(ix,iy),(x,y),(0,255,0),-1)


#SHOW IMAGE

#Black Image
img = np.zeros((512,512,3))

cv2.namedWindow(winname='drawing')

cv2.setMouseCallback('drawing', draw_rectangle)

while True:

    cv2.imshow('drawing',img)

    if cv2.waitKey(1) & 0xFF ==27: 

        break

cv2.destroyAllWindows()